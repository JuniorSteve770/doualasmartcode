{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alesterd\\\\Desktop\\\\React\\\\testsmart\\\\src\\\\components\\\\02Containers\\\\02Post\\\\index.js\";\nimport React, { Component } from 'react';\nimport Doform from './Tform';\nimport Odoo from './Odoo';\nexport default class Todoclass extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addTodo = todo => {\n      //here we add a todo, then add at the beguining of todos\n      const newTodos = [todo, ...this.state.todos]; //here we update our todos\n\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.togle = value => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.value === value) {\n            return { // value:todo.value,\n              // text:todo.text,\n              ...todo,\n              complete: !todo.complete\n            };\n          } else {\n            return todo;\n          }\n        })\n      });\n    };\n\n    this.upDAtetodo = s => {\n      this.setState({\n        todatoShow: s\n      });\n    };\n\n    this.handledeleteTodo = value => {\n      this.setState({\n        todos: this.state.todos.filter(todo => todo.value !== value)\n      });\n    };\n\n    this.state = {\n      todos: [],\n      todatoShow: \"all\"\n    };\n  }\n\n  render() {\n    let todos = [];\n\n    if (this.state.todatoShow === 'all') {\n      todos = this.state.todos;\n    } else if (this.state.todatoShow === \"active\") {\n      todos = this.state.todos.filter(todo => !todo.complete);\n    } else if (this.state.todatoShow === \"active\") {\n      todos = this.state.todos.filter(todo => todo.complete);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Doform, {\n        onSubmit: this.addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(Odoo, {\n        togle: () => this.togle(todo.value),\n        onDelete: () => this.handledeleteTodo(todo.value),\n        todo: todo\n      }, todo.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Number of Post is: \", this.state.todos.filter(todo => !todo.complete).length, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.upDAtetodo(\"all\"),\n          children: \"all Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.upDAtetodo(\"active\"),\n          children: \"active Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.upDAtetodo(\"complete\"),\n          children: \"completed Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Alesterd/Desktop/React/testsmart/src/components/02Containers/02Post/index.js"],"names":["React","Component","Doform","Odoo","Todoclass","constructor","props","addTodo","todo","newTodos","state","todos","setState","togle","value","map","complete","upDAtetodo","s","todatoShow","handledeleteTodo","filter","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Doform from './Tform';\r\nimport Odoo from './Odoo';\r\n\r\n\r\nexport default class Todoclass extends Component {\r\n    constructor(props){\r\n        super(props);   \r\n        this.state={\r\n        todos:[],\r\n        todatoShow:\"all\"\r\n    };\r\n}\r\n\r\n    addTodo = todo =>{\r\n    //here we add a todo, then add at the beguining of todos\r\n        const newTodos =[todo,...this.state.todos];\r\n    //here we update our todos\r\n        this.setState({\r\n            todos:newTodos\r\n        })\r\n    };\r\n    togle =(value)=>{\r\n        this.setState({\r\n            todos:this.state.todos.map( todo =>{\r\n                if(todo.value === value) {\r\n                    return{\r\n                        // value:todo.value,\r\n                        // text:todo.text,\r\n                        ...todo,\r\n                        complete: !todo.complete\r\n                    };\r\n\r\n                }else{\r\n                    return todo;\r\n\r\n                }\r\n            }) \r\n        })\r\n\r\n       \r\n    };\r\n    upDAtetodo=(s)=>{\r\n        this.setState({\r\n            todatoShow:s\r\n        })\r\n    };\r\n    handledeleteTodo=(value)=>{\r\n        this.setState({\r\n            todos:this.state.todos.filter(todo =>todo.value !== value)\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        \r\n        let todos=[];\r\n        \r\n        if (this.state.todatoShow === 'all'){\r\n            todos = this.state.todos;\r\n        }else if(this.state.todatoShow === \"active\"){ \r\n           todos = this.state.todos.filter(todo => !todo.complete);\r\n\r\n        }else if(this.state.todatoShow === \"active\"){ \r\n            todos = this.state.todos.filter(todo => todo.complete);\r\n        }\r\n        return (\r\n            <div>\r\n            \r\n                <Doform onSubmit={this.addTodo}/>\r\n                {/* here we disply our contain via json */}\r\n                    {/* {JSON.stringify(this.state.todos)} */}\r\n                {/* second way to display using map function  */}\r\n                {todos.map(todo =>(\r\n                    <Odoo \r\n                    key={todo.value} \r\n                    togle={()=>this.togle(todo.value)} \r\n                    onDelete={() => this.handledeleteTodo(todo.value)}\r\n                    todo={todo}/>\r\n                ))}\r\n                <br/>\r\n                <div>Number of Post is: {this.state.todos.filter(todo => !todo.complete).length} </div>\r\n                <div>\r\n                <br/>\r\n                    <button onClick={()=> this.upDAtetodo(\"all\")}>all Post</button>\r\n                    <button onClick={()=> this.upDAtetodo(\"active\")}>active Post</button>\r\n                    <button onClick={()=> this.upDAtetodo(\"complete\")}>completed Post</button>\r\n                </div>\r\n                <br/><br/><br/>\r\n            </div> \r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}